import { Primitive } from "./types";
import { Maybe } from "./maybe";
export declare const column: (name: string) => string;
export declare const table: (name: string) => string;
export { Primitive, PrimitiveRecord } from "./types";
export declare const literal: (value: string | number | boolean | string[] | Date | null | undefined) => string;
export declare const toSet: (update: Record<string, Primitive>) => string;
export declare const toValues: <T = Record<string, Primitive>>(items: T[], columns?: string[]) => string;
export declare const toColumns: <T = Record<string, Primitive>>(items: T[]) => string;
export declare const toArray: (items: Primitive[]) => string;
export declare const toLiteralArray: (items: Primitive[]) => string;
export declare const insert: <T = Record<string, Primitive>>(table: string, items: T | T[], returnFields?: Maybe<string | string[]>) => string;
export declare const upsert: <T = Record<string, Primitive>>(table: string, items: T | T[], onConflictKeys: string | string[], updateKeys: string | string[], returnFields?: Maybe<string | string[]>) => string;
